{"version":3,"sources":["components/Button/Button.jsx","components/Card/Card.jsx","components/Overview/Overview.jsx","components/Line/Line.jsx","components/AddForm/AddForm.jsx","components/Details/Details.jsx","components/Main/Main.jsx","assets/data.js","components/Accounts/Accounts.jsx","App.js","serviceWorker.js","index.js"],"names":["Button","showIcon","children","styles","handleClick","className","style","onClick","Card","props","toggleHovered","setState","hovered","state","handleRedirect","history","push","this","username","email","phone","onMouseEnter","onMouseLeave","width","height","borderColor","backgroundColor","color","marginTop","React","Component","withRouter","Overview","users","map","item","key","Line","onDelete","bind","AddForm","handleChange","event","field","target","value","separateString","str","substring","onSubmit","preventDefault","length","test","Number","join","addUser","onCancel","inputError","onChange","e","type","placeholder","Details","toggleShow","showModal","toggleHint","hint","undefined","removeUser","Main","path","data","Accounts","user","filter","to","activeClassName","App","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.477a0234.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.scss';\r\n\r\nfunction Button({ showIcon, children, styles, handleClick, className }) {\r\n\treturn (\r\n\t\t<button className={className || 'add-button'} style={styles} onClick={handleClick}>\r\n\t\t\t{showIcon && <i className='fas fa-plus-circle'></i>}\r\n\t\t\t{children}\r\n\t\t</button>\t\r\n\t)\r\n}\r\n\r\nexport default Button","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './index.scss';\r\n\r\n\r\nclass Card extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thovered: false\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleHovered = () => {\r\n\t\tthis.setState({ hovered: !this.state.hovered })\r\n\t}\r\n\r\n\thandleRedirect = () => {\r\n\t\tthis.props.history.push('/details')\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { hovered } = this.state; \r\n\t\tconst { username, email, phone } = this.props;\r\n\t\tconst buttonStyles = { \r\n\t\t\twidth: '100px', \r\n\t\t\theight: '34px',\r\n\t\t\tborderColor: '#fff',\r\n\t\t\tbackgroundColor: '#ffb000',\r\n\t\t\tcolor: '#fff',\r\n\t\t\tmarginTop: '0px'\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<div className='card' onMouseEnter={this.toggleHovered} onMouseLeave={this.toggleHovered}>\r\n\t\t\t\t{\r\n\t\t\t\t\t!hovered ? \t\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<i className='far fa-id-card'></i>\r\n\t\t\t\t\t\t\t<p>{username}</p>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t: \r\n\t\t\t\t\t\t<div className='info'>\r\n\t\t\t\t\t\t\t<span className='field'>\r\n\t\t\t\t\t\t\t\tEmail: \r\n\t\t\t\t\t\t\t\t<span className='field__text'>{email}</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className='field'>\r\n\t\t\t\t\t\t\t\tPhone: \r\n\t\t\t\t\t\t\t\t<span className='field__text'>{phone}</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<Button styles={buttonStyles} handleClick={this.handleRedirect}>\r\n\t\t\t\t\t\t\t\tDetails\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withRouter(Card)","import React from 'react';\r\nimport Card from '../Card/Card';\r\nimport './index.scss';\r\n\r\nfunction Overview({ users }) {\r\n\t\treturn (\r\n\t\t<div className='overview'>\r\n\t\t\t{users.map(item => <Card key={item.username} {...item}/>)}\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Overview","import React from 'react';\r\nimport './index.scss';\r\n\r\nfunction Line({ username, email, phone, onDelete }) {\r\n\treturn (\r\n\t\t<div className='line'>\r\n\t\t\t<span>{username}</span>\r\n\t\t\t<div className='right'>\r\n\t\t\t\t<div className='right__container'>Email: <span className='right__text'>{email}</span></div>\r\n\t\t\t\t<div className='right__container'>Phone: <span className='right__text'>{phone}</span></div>\r\n\t\t\t\t<i className='far fa-trash-alt' onClick={onDelete.bind(this, username)}></i>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Line","import React, { Component } from 'react';\r\nimport Button from '../Button/Button';\r\nimport './index.scss';\r\n\r\nclass AddForm extends Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: '',\r\n\t\t\temail: '',\r\n\t\t\tphone: '',\r\n\t\t\tinputError: false\r\n\t\t};\r\n\t}\t\r\n\t\r\n\thandleChange = (event, field) => {\r\n\t\tthis.setState({ [field]: event.target.value })\r\n\t}\r\n\r\n\tseparateString = (str) => {\r\n\t\treturn [str.substring(0,3), str.substring(3, 5), str.substring(5,8), str.substring(8,10)];\r\n\t}\r\n\r\n\tonSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tlet { username, email, phone } = this.state; \r\n\t\tconst containNumbers = /\\d/;\r\n\t\tconst emailFormat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n\t\tif(phone.length >= 10 && !containNumbers.test(username) && emailFormat.test(email) && Number(phone)) {\r\n\t\t\tphone = this.separateString(phone).join('-');\r\n\t\t\tthis.props.addUser({ username, email, phone });\r\n\t\t\tthis.props.onCancel(event);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif(!this.state.inputError){\r\n\t\t\t\tthis.setState({ inputError: !this.state.inputError })\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { username, email, phone } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<form className='add__form'>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tclassName='add__form__field' \r\n\t\t\t\t\t\tvalue={username} \r\n\t\t\t\t\t\tonChange={(e) => this.handleChange(e, 'username')}\r\n\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\tplaceholder='username' \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tclassName='add__form__field' \r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => this.handleChange(e, 'email')} \r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tplaceholder='example@gmail.com' \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tclassName='add__form__field' \r\n\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\tonChange={(e) => this.handleChange(e, 'phone')} \r\n\t\t\t\t\t\ttype='phone' \r\n\t\t\t\t\t\tplaceholder='0672104531' \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{this.state.inputError && <span className='add__form__field--error'>\r\n\t\t\t\t\t\tПеревірте чи Ви правильно ввели дані!\r\n\t\t\t\t\t</span>}\r\n\t\t\t\t\t<div className='add__form__buttons'>\r\n\t\t\t\t\t\t<Button className='submit' handleClick={(e) => this.onSubmit(e)}>\r\n\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button className='cancel' handleClick={this.props.onCancel}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AddForm","import React, { Component } from 'react';\r\nimport Button from '../Button/Button';\r\nimport Line from '../Line/Line';\r\nimport AddForm from '../AddForm/AddForm';\r\nimport './index.scss';\r\n\r\nclass Details extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thint: false,\r\n\t\t\tshowModal: false\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleShow = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ showModal: !this.state.showModal })\r\n\t}\r\n\r\n\ttoggleHint = () => {\r\n\t\tthis.setState({ hint: !this.state.hint })\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='details'>\r\n\t\t\t\t<div className='list__header'>\r\n\t\t\t\t\t<p className='title'>\r\n\t\t\t\t\t\tList \r\n\t\t\t\t\t\t<i \r\n\t\t\t\t\t\t\tclassName='fas fa-info-circle' \r\n\t\t\t\t\t\t\tstyle={this.state.hint ? {color: '#4a4a4a' } : undefined} \r\n\t\t\t\t\t\t\tonClick={this.toggleHint}>\r\n\t\t\t\t\t\t</i> \r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t{this.state.hint && <span className='tooltip'>Account list</span>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='list__content'>\t\t\t\r\n\t\t\t\t\t{this.props.users.map(item => <Line key={item.username} {...item} onDelete={this.props.removeUser}/>)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Button showIcon={true} handleClick={this.toggleShow}>Add account</Button>\r\n\t\t\t\t{this.state.showModal && \r\n\t\t\t\t\t<AddForm \r\n\t\t\t\t\t\tonSubmit={this.onSubmit} \r\n\t\t\t\t\t\tonCancel={this.toggleShow}\r\n\t\t\t\t\t\taddUser={this.props.addUser}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nexport default Details","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Overview from '../Overview/Overview';\r\nimport Details from '../Details/Details';\r\n\r\nfunction Main({ users, addUser, removeUser }) {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t<Route path='/overview'>\r\n\t\t\t\t<Overview \r\n\t\t\t\t\tusers={users}\r\n\t\t\t\t\taddUser={addUser}\r\n\t\t\t\t/>\r\n\t\t\t</Route>\r\n\t\t\t<Route path='/details'>\r\n\t\t\t\t<Details  \r\n\t\t\t\t\tusers={users}\r\n\t\t\t\t\taddUser={addUser}\r\n\t\t\t\t\tremoveUser={removeUser}\r\n\t\t\t\t/>\r\n\t\t\t</Route>\r\n\t\t</Switch>\r\n\t)\r\n}\r\n\r\nexport default Main","let data = [\r\n\t{ username: 'John Barton', email: 'john.barton@gmail.com', phone: '032-22-333-22' },\r\n\t{ username: 'Roy French', email: 'john.barton@gmail.com', phone: '032-22-333-22' },\r\n\t{ username: 'Bradley Barnes', email: 'john.barton@gmail.com', phone: '032-22-333-22' }\r\n]\r\n\r\nexport default data;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Main from '../Main/Main';\r\nimport data from '../../assets/data';\r\nimport './index.scss';\r\n\r\nclass Accounts extends Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusers: data\r\n\t\t}\r\n\t}\r\n\r\n\taddUser = (user) => {\r\n\t\tthis.setState({ users: [...this.state.users, user] })\r\n\t}\r\n\t\r\n\tremoveUser = (username) => {\r\n\t\tthis.setState({ users: this.state.users.filter(item => item.username !== username) }) \r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='accounts'>\r\n\t\t\t\t<h3>Accounts</h3>\r\n\t\t\t\t<div className='tab__menu'>\r\n\t\t\t\t\t<NavLink to='/overview' className='tab' activeClassName='active'>\r\n\t\t\t\t\t\tOverview\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink to='/details' className='tab' activeClassName='active'>\r\n\t\t\t\t\t\tDetails\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Main \r\n\t\t\t\t\tusers={this.state.users}\r\n\t\t\t\t\taddUser={this.addUser}\r\n\t\t\t\t\tremoveUser={this.removeUser}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Accounts","import React from 'react';\nimport Accounts from './components/Accounts/Accounts';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Accounts />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t<App />\n\t</BrowserRouter>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}